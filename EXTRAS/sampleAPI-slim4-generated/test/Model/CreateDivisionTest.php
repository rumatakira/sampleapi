<?php

/**
 * Sample API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is a sample API
 * The version of the OpenAPI document: 1.0.0
 * Contact: rumatakira74@gmail.com.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\CreateDivision;

/**
 * CreateDivisionTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\CreateDivision
 */
class CreateDivisionTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CreateDivision"
     */
    public function testCreateDivision()
    {
        $testCreateDivision = new CreateDivision();
        $namespacedClassname = CreateDivision::getModelsNamespace() . '\\CreateDivision';
        $this->assertSame('\\' . CreateDivision::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionName"
     */
    public function testPropertyDivisionName()
    {
        $this->markTestIncomplete(
            'Test of "divisionName" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionCity"
     */
    public function testPropertyDivisionCity()
    {
        $this->markTestIncomplete(
            'Test of "divisionCity" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionTimeZone"
     */
    public function testPropertyDivisionTimeZone()
    {
        $this->markTestIncomplete(
            'Test of "divisionTimeZone" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionAddress"
     */
    public function testPropertyDivisionAddress()
    {
        $this->markTestIncomplete(
            'Test of "divisionAddress" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionCoordinates"
     */
    public function testPropertyDivisionCoordinates()
    {
        $this->markTestIncomplete(
            'Test of "divisionCoordinates" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionType"
     */
    public function testPropertyDivisionType()
    {
        $this->markTestIncomplete(
            'Test of "divisionType" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "divisionCompanyName"
     */
    public function testPropertyDivisionCompanyName()
    {
        $this->markTestIncomplete(
            'Test of "divisionCompanyName" property in "CreateDivision" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = CreateDivision::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
